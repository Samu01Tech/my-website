---
const { to, button } = Astro.props;
---

{
  !button ? (
    <a
      href={to}
      class="hover-effect on-background-text flex flex-row items-center space-x-0 md:space-x-2"
    >
      <span class="label-large hidden md:block">
        <slot />
      </span>
      <span class="grid place-items-center">
        <slot name="icon" />
      </span>
    </a>
  ) : (
    <button
      onclick="toggleDarkMode()"
      class="hover-effect on-background-text flex flex-row items-center space-x-0 md:space-x-2"
    >
      <span class="label-large hidden md:block">
        <slot />
      </span>
      <span class="grid place-items-center">
        <slot name="icon" />
      </span>
    </button>
    <script is:inline>
      const html = document.querySelector("html");
      const moon = document.querySelector("#moon");
      const sun = document.querySelector("#sun");

      function toggleDarkMode() {
        if (html.classList.contains("dark")) {
          html.classList.remove("dark");
          moon.classList.remove("hidden");
          sun.classList.add("hidden");
          localStorage.setItem("darkMode", "false");
        } else {
          html.classList.add("dark");
          moon.classList.add("hidden");
          sun.classList.remove("hidden");
          localStorage.setItem("darkMode", "true");
        }
      }

      // Check for user's preference in local storage
      const darkMode = localStorage.getItem("darkMode");
      if (darkMode === "true") {
        html.classList.add("dark");
        moon.classList.add("hidden");
        sun.classList.remove("hidden");
      } else {
        moon.classList.remove("hidden");
        sun.classList.add("hidden");
      }
    </script>
  )
}

<style>
  a {
    outline: none;
  }
  .hover-effect {
    position: relative;
  }
  .hover-effect::after {
    content: "";
    position: absolute;
    bottom: -8px;
    left: 0;
    width: 100%;
    height: 3px;
    background-color: var(--md-sys-color-primary);
    scale: 0 1;
    transform-origin: 100%;
    border-radius: 14px;
    transition: scale 0.3s;
  }
  .hover-effect:hover::after,
  .hover-effect:focus::after {
    scale: 1 1;
    transform-origin: 0;
  }
</style>
